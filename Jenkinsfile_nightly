#!groovy

properties([
    [
        $class: 'GithubProjectProperty',
        displayName: 'Evidence Stitching API ',
        projectUrlStr: 'https://github.com/hmcts/rpa-em-stitching-api'
    ],
    pipelineTriggers([cron('21 45 * * *')]), // scheduling to trigger jenkins job
])

@Library("Infrastructure")

def type = "java"
def product = "em"
def component = "stitching"

def secrets = [
        's2s-${env}': [
                secret('microservicekey-em-gw', 'FUNCTIONAL_TEST_CLIENT_S2S_TOKEN')
        ],
        'rpa-${env}': [
                secret('show-oauth2-token', 'FUNCTIONAL_TEST_CLIENT_OAUTH_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

def vaultOverrides = [
        'preview' : 'aat',
        'spreview': 'saat'
]

withNightlyPipeline(type, product, component) {
    // Vars for Kubernetes
    env.IDAM_API_BASE_URI = 'https://idam-api.aat.platform.hmcts.net'
    env.OPEN_ID_API_BASE_URI = 'https://idam-web-public.aat.platform.hmcts.net/o'
    env.S2S_BASE_URI = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
    env.IDAM_WEBSHOW_WHITELIST = 'https://em-show-aat.service.core-compute-aat.internal/oauth2/callback'
    env.DM_STORE_APP_URL = 'http://dm-store-aat.service.core-compute-aat.internal'
    env.DOCMOSIS_ENDPOINT = 'https://docmosis-development.platform.hmcts.net/rs/convert'

    env.TEST_URL = "http://em-stitching-aat.service.core-compute-aat.internal"

    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
    enableMutationTest()
    enableFullFunctionalTest()
    enableSlackNotifications('#em-dev-chat')
}
